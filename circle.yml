machine:
  timezone:
    America/Denver

  # Version of php to use
  php:
    version: 5.6.17

# Add some environment variables
  environment:
    CIRCLE_ENV: test
    WP_MULTISITE: 0
    WP_CORE_DIR: /home/ubuntu/wordpress-develop
    WP_TESTS_DIR: /home/ubuntu/wordpress-develop/tests/phpunit
    plugin_loc: /home/ubuntu/$CIRCLE_PROJECT_REPONAME
    plugin_slug: $CIRCLE_PROJECT_REPONAME
    plugin_dir: /home/ubuntu/wordpress-develop/src/wp-content/plugins/$plugin_slug
    plugin_tests_dir: /home/ubuntu/wordpress-develop/src/wp-content/plugins/$plugin_slug/test

## Customize dependencies
dependencies:
  pre:
    #enable xdebug.  LINE 1/2 to uncomment if you want to run a code coverage report.
    # - sed -i 's/^;//' ~/.phpenv/versions/$(phpenv global)/etc/conf.d/xdebug.ini
    #setup WP install
    - git clone git://develop.git.wordpress.org/ $WP_CORE_DIR;
    - cd $WP_CORE_DIR && cp wp-tests-config-sample.php wp-tests-config.php && sed -i "s/youremptytestdbnamehere/wordpress_test/" wp-tests-config.php && sed -i "s/yourusernamehere/root/" wp-tests-config.php && sed -i "s/yourpasswordhere//" wp-tests-config.php;
    # move plugin into tests/src
    - mv $plugin_loc $plugin_dir;
    # set up database
    - mysql -e 'CREATE DATABASE wordpress_test;' -uroot;
    # setup phpunit
    - wget https://phar.phpunit.de/phpunit.phar && chmod +x phpunit.phar && mv phpunit.phar /home/ubuntu/.phpenv/shims/phpunit

## tests override
test:
  override:
    # comment out the below line to run a code coverage report.
    - cd $plugin_tests_dir; phpunit
    ## LINE 2/2 to uncomment if you want to run a code coverage report.
    # - cd $plugin_tests_dir; phpunit --coverage-html $CIRCLE_ARTIFACTS

  # This will be added to the `/etc/hosts` file
#  hosts:
#    wppusher-plugin.dev: 127.0.0.1
#
#dependencies:
#  pre:
#    # No password is required for the MySQL user `ubuntu`
#    - mysql -u ubuntu -e "create database wordpress"
#
#    # Use cURL to fetch WP-CLI
#    - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
#
#    # Make sure WP-CLI is executable
#    - chmod +x wp-cli.phar
#
#    # Download WordPress into `wordpress` directory
#    - ./wp-cli.phar core download --allow-root --path=wordpress
#
#    # Generate `wp-config.php` file
#    - ./wp-cli.phar core config --allow-root --dbname=wordpress --dbuser=ubuntu --dbhost=localhost --path=wordpress
#
#    # Install WordPress
#    - ./wp-cli.phar core install --allow-root --admin_name=admin --admin_password=admin --admin_email=admin@example.com --url=http://wppusher-plugin.dev:8080 --title=WordPress --path=wordpress
#
#    # Clonse WP Pusher plugin from GitHub
#    - git clone git@github.com:gfirem/formidable2rdb.git wordpress/wp-content/plugins/formidable2rdb
#
#    # And use WP-CLI to activate it
#    - ./wp-cli.phar plugin activate wppusher --path=wordpress
#
#  post:
#    # Copy Apache conf into `site-available`
#    - cp ~/wppusher-plugin/apache-ci.conf /etc/apache2/sites-available
#
#    # Use `a2ensite` to create a symlink for the config
#    - a2ensite apache-ci.conf
#
#    # Restart the Apache server
#    - sudo service apache2 restart
#
#test:
#  override:
#    # This is just for us to see that the WP Pusher plugin was actually installed and is active
#    - ./wp-cli.phar plugin list --path=wordpress
#
#    # Finally, run our Behat features
#    - vendor/bin/behat